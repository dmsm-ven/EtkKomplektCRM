@using System.Threading

@if(taskManager.ActiveTasksInQueue.Any())
{
    <h4>Список задач которые уже добавлены в очередь и ждут выполнения</h4>
    <div class="row py-2">
        
        <div class="table-responsive cron-task-table table-sm table-bordered">
            <table class="table">
                <thead class="thead-etk">
                    <tr>
                        <th style="width: 20%">Позиция в очереди</th>
                        <th style="width: 20%">Тип задачи</th>
                        <th style="width: 40%">Задача</th>
                        <th style="width: 20%">Время запуска</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int index = 1;
                    }
                    @foreach (var t in taskManager.ActiveTasksInQueue)
                    {
                        <tr class="@(t.task_id == taskManager.TaskInProgress.task_id ? "cron-queue-active" : "cron-queue-preparing")">
                            <td>@(index++)</td>
                            <td>@t.task_type_name</td>
                            <td>@t.name</td>
                            <td>@($"{t.exec_time}{(!string.IsNullOrWhiteSpace(t.additional_exec_time) ? $", {t.additional_exec_time}":"")}")</td>                
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private readonly PeriodicTimer timer = new PeriodicTimer(TimeSpan.FromSeconds(5));

    [Inject] public CronTaskService taskManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        while(await timer.WaitForNextTickAsync(CancellationToken.None))
        {
            InvokeAsync(() => StateHasChanged());
        }
    }
}
