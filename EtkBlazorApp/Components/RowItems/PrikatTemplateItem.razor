@using System.Globalization
@using EtkBlazorApp.DataAccess.Entity.Marketplace
@using EtkBlazorApp.DataAccess.Repositories

<tr>
    @* Название производителя *@
    <td>
        <p class="manufacturer-name">@Item.Manufacturer</p>
    </td>

    @* Исключить бренд из выгрузки *@
    <td>
        <button class="btn btn-sm btn-danger remove-vi-manufacturer-btn" onclick="@(async () => await this.DeleteClick.InvokeAsync(Item))">
            <span class="oi oi-trash"></span>
        </button>
    </td>

    @* Рекомендуемая цена *@
    <td>
        <input type="number" class="form-control"
               value="@Item.Discount.ToString("G29", CultureInfo.InvariantCulture)"
               @onchange="@(async (e) => { Item.Discount = decimal.Parse(e.Value.ToString(), CultureInfo.InvariantCulture); await Changed(); } )" />
    </td>

    @* Валюта выгрузки *@
    <td>
        <select @onchange="@(async e => { Item.CurrencyCode = (string)e.Value; await Changed(); })" class="form-control">
            @foreach (var currencyCode in currencyCodeList)
            {
                <option selected="@(currencyCode.Equals(Item.CurrencyCode))" value="@currencyCode">@currencyCode</option>
            }
        </select>
    </td>
    
    @* Выгружаемые склады *@
    <td>
        <StocksCheckListBoxNew StocksWithProduct="@StocksWithAtLeastOneProduct"
                               CheckedStocks="@Item.checked_stocks_list"
                               ReverseLabelDirection=true
                               CheckedStocksChanging="@(async e => await Changed())" />
    </td>
</tr>


<style>
    .remove-vi-manufacturer-btn {
        opacity: 0.05;
        transition: 50ms;
    }

    .remove-vi-manufacturer-btn:hover{
            opacity: 1.0;
            transition: 1.5s;
    }
</style>


@code {

    [Inject] public IPrikatTemplateStorage templateStorage  { get; set; }
    [Parameter] public PrikatManufacturerDiscountViewModel Item { get; set; }
    [Parameter] public List<StockPartnerEntity> AllStocks { get; set; }
    [Parameter] public List<StockPartnerEntity> StocksWithAtLeastOneProduct { get; set; }
    [Parameter] public EventCallback<PrikatManufacturerDiscountViewModel> ItemChanged { get; set; }
    [Parameter] public EventCallback<PrikatManufacturerDiscountViewModel> DeleteClick { get; set; }

    StocksCheckListBoxNew stockList = null;

    List<string> currencyCodeList = new List<string>(Enum.GetNames(typeof(CurrencyType)));

    private async Task Changed()
    {
        Item.CheckedStocks = Item.checked_stocks_list.Any() ?
            string.Join(",", Item.checked_stocks_list.Select(csl => csl.stock_partner_id)) :
            string.Empty;

        await ItemChanged.InvokeAsync(Item);
        StateHasChanged();
    }
}
