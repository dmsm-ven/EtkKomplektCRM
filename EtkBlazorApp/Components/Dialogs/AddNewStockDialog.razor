@using EtkBlazorApp.DataAccess.Repositories.Product
@inject IStockStorage stockStorage

@if (isVisible)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog" style="background: rgba(0,0,0, 0.5)">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <EditForm Model="@newStock" OnValidSubmit="@(e => OnConfirmationChange(newStock))">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modal-title">Информация о складе</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                                @onclick="@(e => OnConfirmationChange(null))">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="modal-body" style="height: 400px; overflow-y: auto;">
                        <div class="form-group">
                            <label for="stock_name">Сокращенное название</label>
                            <input type="text" id="stock_name" class="form-control" @bind="newStock.Name" required />
                        </div>
                        <div class="form-group">
                            <label for="city_name">Город</label>
                            <input type="text" id="city_name" list="city-names"
                                   class="form-control"
                                   value="@newStock.City"
                                   @onchange="CityChanged"
                                   required />
                            <datalist id="city-names">
                                @foreach (var city in stockCities)
                                {
                                    <option selected="@(newStock.City == city.name)" value="@city.name">@city.name</option>
                                }
                            </datalist>
                        </div>
                        <div class="form-group">
                            <label for="shipment_period">Срок поставки (дней)</label>
                            <input type="number" min="0" id="shipment_period" class="form-control" @bind="newStock.ShipmentPeriodInDays" required />
                        </div>
                        <div class="form-group">
                            <label for="stock_description">Описание</label>
                            <textarea type="text" id="stock_description" class="form-control" @bind="newStock.Description" style="height: 80px;" />
                        </div>
                        <div class="form-group">
                            <label for="stock_address">Адрес</label>
                            <textarea type="text" id="stock_address" class="form-control" @bind="newStock.Address" style="height: 80px;" />
                        </div>
                        <div class="form-group">
                            <label for="stock_phone_number">Телефон</label>
                            <input type="text" id="stock_phone_number" class="form-control" @bind="newStock.PhoneNumber" />
                        </div>
                        <div class="form-group">
                            <label for="stock_email">Email</label>
                            <input type="email" id="stock_email" class="form-control" @bind="newStock.Email" />
                        </div>
                        <div class="form-group">
                            <label for="stock_website">Вебсайт</label>
                            <input type="url" id="stock_website" class="form-control" @bind="newStock.Website" />
                        </div>
                        <div class="form-group">
                            <input type="checkbox" id="stock_show_name_for_all" @bind="newStock.ShowNameForAll" />
                            <label for="stock_show_name_for_all" style="font-size: 11px;">Отображать название склада в карточке товара для всех пользователей</label>
                        </div>
                    </div>

                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal"
                                @onclick="@(e => OnConfirmationChange(null))">
                            Отмена
                        </button>
                        <button type="submit" class="btn btn-success">
                            @confirmButtonText
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}
@code {
    [Parameter] public EventCallback<StockPartnerViewModel> ConfirmationChanged { get; set; }
    List<StockCityEntity> stockCities = new List<StockCityEntity>();

    StockPartnerViewModel newStock = new StockPartnerViewModel();
    bool isVisible = false;
    string confirmButtonText = "";

    protected override async Task OnInitializedAsync()
    {
        stockCities = await stockStorage.GetStockCities();
    }

    public void Show()
    {
        confirmButtonText = "Добавить склад";
        isVisible = true;
        StateHasChanged();
    }

    public void Show(StockPartnerViewModel stock)
    {
        confirmButtonText = "Обновить склад";
        newStock = stock;
        isVisible = true;
        StateHasChanged();
    }

    private void CityChanged(ChangeEventArgs e)
    {
        newStock.City = e.Value.ToString();
        newStock.CityId = stockCities.FirstOrDefault(sc => sc.name == newStock.City)?.city_id ?? -1;
    }

    private async Task OnConfirmationChange(StockPartnerViewModel item)
    {
        isVisible = false;
        await ConfirmationChanged.InvokeAsync(item);
        newStock = new StockPartnerViewModel();
    }
} 